generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(uuid())
  email                 String         @unique
  username              String         @unique
  password              String
  bio                   String?
  avatar                String?
  posts                 Post[]         @relation("UserPosts")
  comments              Comment[]
  votes                 Vote[]
  notifications         Notification[] @relation("ActorUser")
  receivedNotifications Notification[] @relation("RecipientUser")
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
}

model Post {
  id        String        @id @default(uuid())
  title     String
  content   String
  author    User          @relation("UserPosts", fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  hashtags  PostHashtag[]
  votes     Vote[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

model Vote {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  value     Int // 1 = upvote, -1 = downvote
  createdAt DateTime @default(now())

  @@unique([postId, userId]) // mỗi user chỉ vote 1 lần / post
}

model Hashtag {
  id        String        @id @default(uuid())
  name      String        @unique
  posts     PostHashtag[]
  createdAt DateTime      @default(now())
}

model PostHashtag {
  post      Post    @relation(fields: [postId], references: [id])
  postId    String
  hashtag   Hashtag @relation(fields: [hashtagId], references: [id])
  hashtagId String

  @@id([postId, hashtagId])
}

model Notification {
  id          String   @id @default(uuid())
  type        String // e.g., 'comment', 'vote', 'mention'
  message     String
  user        User     @relation("ActorUser", fields: [userId], references: [id])
  userId      String
  recipient   User     @relation("RecipientUser", fields: [recipientId], references: [id])
  recipientId String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
}
